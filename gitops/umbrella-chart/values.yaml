# Production environment values for restauratings umbrella chart

# Global configuration
global:
  environment: production

# Restauratings application configuration
restauratings:
  enabled: true
  replicaCount: 2
  
  image:
    repository: 011782265792.dkr.ecr.ap-south-1.amazonaws.com/yarden/restauratings
    tag: "restauratings-2.1.13"
    pullPolicy: IfNotPresent
  
  serviceAccount:
    create: true
    annotations: {}  
    name: "restauratings-app"
  
  sealedSecrets:
    enabled: true
  
  ssm:
    enabled: false
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 5000
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/http2-push-preload: "true"
    hosts:
      - host: restauratings.ddns.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: restauratings-tls
        hosts:
          - restauratings.ddns.net
  
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 125m
      memory: 128Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  
  # Application configuration
  app:
    name: restauratings
    port: 5000
    env: production
  
  # Health checks
  healthcheck:
    enabled: true
    livenessProbe:
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      failureThreshold: 3
  
  # Flask Environment variables (fallback values - sealed secrets will override these)
  env:
    FLASK_ENV: "production"
    FLASK_APP: "app.py"

mongodb:
  enabled: true
  fullnameOverride: "restauratings-umbrella-mongodb"
  architecture: replicaset
  replicaCount: 1
  
  arbiter:
    enabled: false
  
  auth:
    enabled: true
    existingSecret: restauratings-mongo-creds
    
    secretKeys:
      adminPassword: mongodb-root-password
      userPassword: mongodb-password
      
    username: "admin"
    database: "restauratings"
    rootUser: "root"
        
  replicaSetName: "rs0"
  
  persistence:
    enabled: true
    storageClass: "gp2"
    size: 10Gi
  
  service:
    type: ClusterIP
    ports:
      mongodb: 27017
  
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 6
    
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
  
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  
  pdb:
    create: true
    minAvailable: 1

# Nginx Ingress Controller (disabled - managed by infrastructure)
ingress-nginx:
  enabled: false